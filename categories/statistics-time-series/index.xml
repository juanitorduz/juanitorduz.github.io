<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Statistics, Time Series on Dr. Juan Camilo Orduz</title>
    <link>/categories/statistics-time-series/</link>
    <description>Recent content in Statistics, Time Series on Dr. Juan Camilo Orduz</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 21 Feb 2020 00:00:00 +0000</lastBuildDate><atom:link href="/categories/statistics-time-series/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Forecasting Weekly Data with Prophet</title>
      <link>/fb_prophet/</link>
      <pubDate>Fri, 21 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>/fb_prophet/</guid>
      <description>In this notebook we are present an initial exploration of the Prophet package by Facebook. From the documentation:
Prophet is a procedure for forecasting time series data based on an additive model where non-linear trends are fit with yearly, weekly, and daily seasonality, plus holiday effects. It works best with time series that have strong seasonal effects and several seasons of historical data. Prophet is robust to missing data and shifts in the trend, and typically handles outliers well.</description>
    </item>
    
    <item>
      <title>Exploring TensorFlow Probability STS Forecasting</title>
      <link>/intro_sts_tfp/</link>
      <pubDate>Tue, 11 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>/intro_sts_tfp/</guid>
      <description>In this notebook we explore the Structural Time Series (STS) Module of TensorFlow Probability. We follow closely the use cases presented in their Medium blog. As described there: An STS model expresses an observed time series as the sum of simpler components 1:    \[ f(t) = \sum_{k=1}^{N}f_{k}(t) + \varepsilon, \quad \text{where}\quad \varepsilon \sim N(0, \sigma^2). \]
Each summand \(f_{k}(t)\) has a particular structure, e.g.Â specific seasonality, trend, autoregressive terms, etc.</description>
    </item>
    
  </channel>
</rss>
